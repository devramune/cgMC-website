// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 77KYUYm9JjmMdtJ5Ckst57
// Component: 8P7gmc407z9
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: WHKZkoQfDP8713/component
import ValueProp from "../../ValueProp"; // plasmic-import: ZtUpmv_mljRcEB/component
import PriceCard from "../../PriceCard"; // plasmic-import: UN7KXdWhMCaApR/component
import FooterSection from "../../FooterSection"; // plasmic-import: eLHgM1HorTA5C3/component

import { useScreenVariants as useScreenVariantsqH0UcdnSbyLsq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Q-h0UCDNSbyLSQ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_coralia_mc.module.css"; // plasmic-import: 77KYUYm9JjmMdtJ5Ckst57/projectcss
import sty from "./PlasmicGrimmSolis.module.css"; // plasmic-import: 8P7gmc407z9/css

import _849Bd91B3E734B5E5Fc9Ef875F550158SvgIcon from "./icons/PlasmicIcon___849Bd91B3E734B5E5Fc9Ef875F550158Svg"; // plasmic-import: OYKeoEgiaq/icon
import _7A94C12518B17784A31F20Eb6Ceeff64SvgIcon from "./icons/PlasmicIcon___7A94C12518B17784A31F20Eb6Ceeff64Svg"; // plasmic-import: L__AFzPigP/icon
import MountainsByTheIconZ3322972SvgIcon from "./icons/PlasmicIcon__MountainsByTheIconZ3322972Svg"; // plasmic-import: q-jpBbWamN/icon
import HomesvgIcon from "./icons/PlasmicIcon__Homesvg"; // plasmic-import: Gqivseucid/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: N3Q4qxG4dGvc_x/icon

export type PlasmicGrimmSolis__VariantMembers = {};

export type PlasmicGrimmSolis__VariantsArgs = {};
type VariantPropType = keyof PlasmicGrimmSolis__VariantsArgs;
export const PlasmicGrimmSolis__VariantProps = new Array<VariantPropType>();

export type PlasmicGrimmSolis__ArgsType = {};
type ArgPropType = keyof PlasmicGrimmSolis__ArgsType;
export const PlasmicGrimmSolis__ArgProps = new Array<ArgPropType>();

export type PlasmicGrimmSolis__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  headerHeroSection?: p.Flex<"div">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  h2?: p.Flex<"h2">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultGrimmSolisProps {}

function PlasmicGrimmSolis__RenderFunc(props: {
  variants: PlasmicGrimmSolis__VariantsArgs;
  args: PlasmicGrimmSolis__ArgsType;
  overrides: PlasmicGrimmSolis__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqH0UcdnSbyLsq()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"Grimm Solis"}</title>

        <meta key="og:title" property="og:title" content={"Grimm Solis"} />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Grimm Solis"}
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/53a6ab602cd6e4ec7d5fd6b2b19d584b.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/53a6ab602cd6e4ec7d5fd6b2b19d584b.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__rDGa4)} />
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__wuKjx)}
            >
              <div className={classNames(projectcss.all, sty.column__x8PAu)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jDh)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___32WJz)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aw3Nt)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nVbJ
                        )}
                      >
                        {"NEW!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7VrBd
                      )}
                    >
                      {"Grimm Solis"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yoGJs
                      )}
                    >
                      {
                        "During the day, fly through the air like a bird, over 80 meters above the ground; with an amazing view of all of the Grimm Parks."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nZY)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__o7RRn)}>
                  <h2
                    data-plasmic-name={"h2"}
                    data-plasmic-override={overrides.h2}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2
                    )}
                  >
                    {"What is Grimm Solis?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__alyq
                  )}
                >
                  {
                    "Grimm Lunae is a day-time zipline track that takes you above the warm ocean."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__szxeM)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__ygyNq)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__xrGgT)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__wodFr
                      )}
                      darkBackground={true}
                      description={
                        "Fly through the sky, 50 metres above the ground at the server's first zipline park."
                      }
                      icon={
                        <_849Bd91B3E734B5E5Fc9Ef875F550158SvgIcon
                          className={classNames(projectcss.all, sty.svg__oVy5Z)}
                          role={"img"}
                        />
                      }
                      title={"Through the sky"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__cb0Y9)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__iIp5W
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__y2Hwk
                          )}
                        >
                          {
                            "Take a rest at a station, as there are stations every 2-4 chunks."
                          }
                        </div>
                      }
                      icon={
                        <_7A94C12518B17784A31F20Eb6Ceeff64SvgIcon
                          className={classNames(projectcss.all, sty.svg__cw5Ja)}
                          role={"img"}
                        />
                      }
                      title={"Stations every 2-4 chunks"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__sCcMp)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__qi1MR
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__laQd5
                          )}
                        >
                          {
                            "Views of the entire Grimm Parks property, including ALDG, and Grimm Splash."
                          }
                        </div>
                      }
                      icon={
                        <MountainsByTheIconZ3322972SvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___1Hecu
                          )}
                          role={"img"}
                        />
                      }
                      title={"Grimm Parks Views"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__pvgGr)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__jxUja
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__g4V2O
                          )}
                        >
                          {
                            "Grimm Ziplines is located about only 300 meters from Grimm Vista Westlands."
                          }
                        </div>
                      }
                      icon={
                        <HomesvgIcon
                          className={classNames(projectcss.all, sty.svg__tbAdw)}
                          role={"img"}
                        />
                      }
                      title={"Close to Grimm Vista"}
                      vertical={true}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__jjKpR)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jqRxr)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___0RMcv)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__lu9D8)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bkApC
                    )}
                  >
                    {"Ticket prices"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lsMRp
                  )}
                >
                  {
                    "Ticket prices vary for what experience you want to have at Grimm Parks. All prices in in-game money."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___2Yk4P)}
              >
                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__hDw4R)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__mAw2A
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__v5NHj
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__bejX
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pWdUh
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"750"}
                  label={"a land dark and grimm"}
                />

                <PriceCard
                  className={classNames(
                    "__wab_instance",
                    sty.priceCard___5GTt8
                  )}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__oTq6X
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zyZHb
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__kkPa8
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___8Zg4Y
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__ivj0E
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oWz59
                            )}
                          >
                            {"Access to buffet at Devil's Meal in Hell."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__aael2
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wx6Tx
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fg6TM
                            )}
                          >
                            {
                              "Transportation through Tabantha road system and PHB airport."
                            }
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___2J3Ci
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1250"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dxmfS
                      )}
                    >
                      {"A LAnd dark and grimm + grimm splash"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames(
                    "__wab_instance",
                    sty.priceCard___0VMkt
                  )}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wCsge
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gta5Z
                            )}
                          >
                            {"Access to all areas of ALDG park."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wjUfZ
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__a7Kvl
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dK40
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__uAoRw
                        )}
                        description={
                          "Access to buffet at  Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yLjPn
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yx9Lz
                        )}
                        description={
                          "A zipline trip at either Grimm Solis or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gmK8O
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___8G6Wl
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nBCyT
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tMaf
                      )}
                    >
                      {"grimm pass"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__qsskI)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__h6NMm
                        )}
                        description={"Access to all areas of ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__b0AAf
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__t8Bl5
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__oesiB
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yyUz
                        )}
                        description={
                          "Access to buffet at Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fsaMj
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__g75Rw
                        )}
                        description={
                          "A zipline trip at Grimm Solis and/or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__exuqd
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__juy5H
                        )}
                        description={
                          "A 3-day stay at Grimm Vista Westlands or Shoreline."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__iKudQ
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__sc1Kh
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__t5U8O
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"2750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__c2MiL
                      )}
                    >
                      {"Grimm stay"}
                    </div>
                  }
                  primary={true}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "headerHeroSection",
    "section",
    "foreground3",
    "h2",
    "footerSection"
  ],
  navbar: ["navbar"],
  headerHeroSection: ["headerHeroSection"],
  section: ["section", "foreground3", "h2"],
  foreground3: ["foreground3", "h2"],
  h2: ["h2"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  headerHeroSection: "div";
  section: "section";
  foreground3: "div";
  h2: "h2";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGrimmSolis__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGrimmSolis__VariantsArgs;
    args?: PlasmicGrimmSolis__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGrimmSolis__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicGrimmSolis__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicGrimmSolis__ArgProps,
          internalVariantPropNames: PlasmicGrimmSolis__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicGrimmSolis__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGrimmSolis";
  } else {
    func.displayName = `PlasmicGrimmSolis.${nodeName}`;
  }
  return func;
}

export const PlasmicGrimmSolis = Object.assign(
  // Top-level PlasmicGrimmSolis renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    h2: makeNodeComponent("h2"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicGrimmSolis
    internalVariantProps: PlasmicGrimmSolis__VariantProps,
    internalArgProps: PlasmicGrimmSolis__ArgProps
  }
);

export default PlasmicGrimmSolis;
/* prettier-ignore-end */
