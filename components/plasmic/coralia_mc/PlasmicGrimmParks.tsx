// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 77KYUYm9JjmMdtJ5Ckst57
// Component: UM7ynOTgdS4aGA
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: WHKZkoQfDP8713/component
import Button from "../../Button"; // plasmic-import: TjNmJ8EACMI288/component
import ValueProp from "../../ValueProp"; // plasmic-import: ZtUpmv_mljRcEB/component
import PriceCard from "../../PriceCard"; // plasmic-import: UN7KXdWhMCaApR/component
import FooterSection from "../../FooterSection"; // plasmic-import: eLHgM1HorTA5C3/component

import { useScreenVariants as useScreenVariantsqH0UcdnSbyLsq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Q-h0UCDNSbyLSQ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_coralia_mc.module.css"; // plasmic-import: 77KYUYm9JjmMdtJ5Ckst57/projectcss
import sty from "./PlasmicGrimmParks.module.css"; // plasmic-import: UM7ynOTgdS4aGA/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: j6pF-s8fPAPENq/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: ReWV2gVegjvClb/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: hzbl2np_5tCeKN/icon
import TargetIcon from "./icons/PlasmicIcon__Target"; // plasmic-import: s2aeMiXbBoZc9B/icon
import FastIcon from "./icons/PlasmicIcon__Fast"; // plasmic-import: KeUnhQHf4fnXbd/icon
import StrongIcon from "./icons/PlasmicIcon__Strong"; // plasmic-import: FgKNw6nvSfXoEx/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: N3Q4qxG4dGvc_x/icon

export type PlasmicGrimmParks__VariantMembers = {};

export type PlasmicGrimmParks__VariantsArgs = {};
type VariantPropType = keyof PlasmicGrimmParks__VariantsArgs;
export const PlasmicGrimmParks__VariantProps = new Array<VariantPropType>();

export type PlasmicGrimmParks__ArgsType = {};
type ArgPropType = keyof PlasmicGrimmParks__ArgsType;
export const PlasmicGrimmParks__ArgProps = new Array<ArgPropType>();

export type PlasmicGrimmParks__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  headerHeroSection2?: p.Flex<"div">;
  foreground4?: p.Flex<"div">;
  headerHeroSection3?: p.Flex<"div">;
  foreground5?: p.Flex<"div">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  h2?: p.Flex<"h2">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultGrimmParksProps {}

function PlasmicGrimmParks__RenderFunc(props: {
  variants: PlasmicGrimmParks__VariantsArgs;
  args: PlasmicGrimmParks__ArgsType;
  overrides: PlasmicGrimmParks__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqH0UcdnSbyLsq()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"Grimm Parks"}</title>

        <meta key="og:title" property="og:title" content={"Grimm Parks"} />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Grimm Parks"}
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/9218b1c6df19bb1c7dfff4d261b1de35.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/9218b1c6df19bb1c7dfff4d261b1de35.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zFaFq)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eCbj9
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Grimm Parks"
                  : "Grimm Parks"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__z6JRz
                )}
              >
                {"The most amazing amusement parks on all of cgMC."}
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__qyOvo)} />
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__x2Kyf)}
            >
              <div className={classNames(projectcss.all, sty.column__l8CCd)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wd45U)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__baE4G)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tn5Q9)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zhhKa
                        )}
                      >
                        {"NEW!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___55Y4N
                      )}
                    >
                      {"A land Dark and Grimm"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pfkIq
                      )}
                    >
                      {
                        "Grimm Parks' medieval-themed amusement park in the heart of Hook Bay."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nhqs7)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___6T6Oc
                      )}
                      color={"darkGray" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__p9ZOw)}
                          role={"img"}
                        />
                      }
                      link={"/grimmparks/aldg" as const}
                      outline={true}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qw1Qt
                        )}
                      >
                        {"Go"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__dEnTq)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qnsU6
                )}
              >
                {" "}
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection2"}
            data-plasmic-override={overrides.headerHeroSection2}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection2)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__pKl2G)} />
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__my7Eb)}
            >
              <div className={classNames(projectcss.all, sty.column__oKtRw)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__th6Cf)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__f9Z3W)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mnaHr)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zyo09
                        )}
                      >
                        {"NEW!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rvo21
                      )}
                    >
                      {"Grimm Splash"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__coueJ
                      )}
                    >
                      {
                        "Hours of fun at the Grimm Splash water park, north of A land Dark and Grimm."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sdLXg)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___8ZV1W
                      )}
                      color={"darkGray" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__qBehM)}
                          role={"img"}
                        />
                      }
                      link={"/grimmparks/grimmsplash" as const}
                      outline={true}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2XhH5
                        )}
                      >
                        {"Go"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__p8HsC)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground4"}
              data-plasmic-override={overrides.foreground4}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vM3F7
                )}
              >
                {" "}
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection3"}
            data-plasmic-override={overrides.headerHeroSection3}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection3)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__u6Ij6)} />
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__b4Trp)}
            >
              <div className={classNames(projectcss.all, sty.column__u2PAc)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__x0GLa)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__e2MCh)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9P2TF
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9Z6XE
                        )}
                      >
                        {"NEW!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x2CMs
                      )}
                    >
                      {"Grimm Ziplines"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5JrV
                      )}
                    >
                      {
                        "Fly through the air at Grimm Ziplines, over 50 meters above the ground, soaring with the birds."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wcdI)}
                  >
                    <Button
                      className={classNames("__wab_instance", sty.button__rkTt)}
                      color={"darkGray" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__cf2Z2)}
                          role={"img"}
                        />
                      }
                      link={"/grimmparks/grimmziplines" as const}
                      outline={true}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2Bj5Q
                        )}
                      >
                        {"Go"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__oxSy)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground5"}
              data-plasmic-override={overrides.foreground5}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eytnJ
                )}
              >
                {" "}
              </div>
            </p.Stack>
          </p.Stack>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__k3RhZ)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sfYe3)}>
                  <h2
                    data-plasmic-name={"h2"}
                    data-plasmic-override={overrides.h2}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2
                    )}
                  >
                    {"Grimm Parks"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bzwqB
                  )}
                >
                  {"Committed to being the source of all fun."}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pHZp)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___1WKXs)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__jajuV)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__pKvdj
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__h4Qo1
                          )}
                        >
                          {
                            "Rides that are short but are fun while you are on it."
                          }
                        </div>
                      }
                      icon={
                        <HammerIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3Ib93
                          )}
                          role={"img"}
                        />
                      }
                      title={"Best quality rides"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__fFyqc)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__hfvtE
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__egexC
                          )}
                        >
                          {
                            "Ideas used have always been rigorously improved before it begins construction in a park."
                          }
                        </div>
                      }
                      icon={
                        <TargetIcon
                          className={classNames(projectcss.all, sty.svg__zeGJ)}
                          role={"img"}
                        />
                      }
                      title={"Ideas worth creating"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___1AmgO)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp___2Jjpg
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cUbgG
                          )}
                        >
                          {
                            "There are slow rides and fast rides, and you can go wherever in the park you want, there is no set trail."
                          }
                        </div>
                      }
                      icon={
                        <FastIcon
                          className={classNames(projectcss.all, sty.svg__nkC5)}
                          role={"img"}
                        />
                      }
                      title={"Whatever speed floats your boat"}
                      vertical={true}
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__knAw)}>
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__zf4A1
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gSsDs
                          )}
                        >
                          {
                            "All rails are sourced honestly from Tabanthan iron farms."
                          }
                        </div>
                      }
                      icon={
                        <StrongIcon
                          className={classNames(projectcss.all, sty.svg__cMjTn)}
                          role={"img"}
                        />
                      }
                      title={"Strong confidence"}
                      vertical={true}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__knnX)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___8KrxX)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t97PN)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___1XHtf)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d1DOb
                    )}
                  >
                    {"Ticket prices"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qwcHd
                  )}
                >
                  {
                    "Ticket prices vary for what experience you want to have at Grimm Parks. All prices in in-game money."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1Xgyf)}
              >
                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__aO4YF)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__p40LW
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___4GxTg
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__bejX
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lb5V9
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"750"}
                  label={"a land dark and grimm"}
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__oNdEe)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__hh0LN
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gI4ZV
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      {true ? (
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kkPa8
                          )}
                          description={
                            "Access to all areas of the Grimm Splash waterpark."
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__y4Is2
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      ) : null}

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__ivj0E
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__szX0
                            )}
                          >
                            {"Access to buffet at Devil's Meal in Hell."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__aAul9
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wx6Tx
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rRV8
                            )}
                          >
                            {
                              "Transportation through Tabantha road system and PHB airport."
                            }
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wvlqL
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1250"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q36Gf
                      )}
                    >
                      {"A LAnd dark and grimm + grimm splash"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__ysX)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__hpGYd
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bFdz4
                            )}
                          >
                            {"Access to all areas of ALDG park."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___2I3Ja
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__a7Kvl
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___1O60F
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__uAoRw
                        )}
                        description={
                          "Access to buffet at  Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___8SrQh
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yx9Lz
                        )}
                        description={
                          "A zipline trip at either Grimm Solis or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fAybq
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___8G6Wl
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ss7Bp
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eiDzb
                      )}
                    >
                      {"grimm pass"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames(
                    "__wab_instance",
                    sty.priceCard___8VBhj
                  )}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wqgyd
                        )}
                        description={"Access to all areas of ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wn4Wl
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__t8Bl5
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tlZWk
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yyUz
                        )}
                        description={
                          "Access to buffet at Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ifXiS
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__g75Rw
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0RoxJ
                            )}
                          >
                            {"A zipline trip at Grimm Solis and/or Lunae."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__aHd6O
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__juy5H
                        )}
                        description={
                          "A 3-day stay at Grimm Vista Westlands or Shoreline."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yixIk
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__sc1Kh
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rpG5B
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"2750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bkJ72
                      )}
                    >
                      {"Grimm stay"}
                    </div>
                  }
                  primary={true}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "headerHeroSection",
    "foreground2",
    "headerHeroSection2",
    "foreground4",
    "headerHeroSection3",
    "foreground5",
    "section",
    "foreground3",
    "h2",
    "footerSection"
  ],
  navbar: ["navbar"],
  foreground: ["foreground"],
  headerHeroSection: ["headerHeroSection"],
  foreground2: ["foreground2"],
  headerHeroSection2: ["headerHeroSection2"],
  foreground4: ["foreground4"],
  headerHeroSection3: ["headerHeroSection3"],
  foreground5: ["foreground5"],
  section: ["section", "foreground3", "h2"],
  foreground3: ["foreground3", "h2"],
  h2: ["h2"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  headerHeroSection: "div";
  foreground2: "div";
  headerHeroSection2: "div";
  foreground4: "div";
  headerHeroSection3: "div";
  foreground5: "div";
  section: "section";
  foreground3: "div";
  h2: "h2";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGrimmParks__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGrimmParks__VariantsArgs;
    args?: PlasmicGrimmParks__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGrimmParks__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicGrimmParks__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicGrimmParks__ArgProps,
          internalVariantPropNames: PlasmicGrimmParks__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicGrimmParks__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGrimmParks";
  } else {
    func.displayName = `PlasmicGrimmParks.${nodeName}`;
  }
  return func;
}

export const PlasmicGrimmParks = Object.assign(
  // Top-level PlasmicGrimmParks renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    foreground2: makeNodeComponent("foreground2"),
    headerHeroSection2: makeNodeComponent("headerHeroSection2"),
    foreground4: makeNodeComponent("foreground4"),
    headerHeroSection3: makeNodeComponent("headerHeroSection3"),
    foreground5: makeNodeComponent("foreground5"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    h2: makeNodeComponent("h2"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicGrimmParks
    internalVariantProps: PlasmicGrimmParks__VariantProps,
    internalArgProps: PlasmicGrimmParks__ArgProps
  }
);

export default PlasmicGrimmParks;
/* prettier-ignore-end */
