// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 77KYUYm9JjmMdtJ5Ckst57
// Component: C_SAWrOKfED
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: WHKZkoQfDP8713/component
import ValueProp from "../../ValueProp"; // plasmic-import: ZtUpmv_mljRcEB/component
import PriceCard from "../../PriceCard"; // plasmic-import: UN7KXdWhMCaApR/component
import FooterSection from "../../FooterSection"; // plasmic-import: eLHgM1HorTA5C3/component

import { useScreenVariants as useScreenVariantsqH0UcdnSbyLsq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Q-h0UCDNSbyLSQ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_coralia_mc.module.css"; // plasmic-import: 77KYUYm9JjmMdtJ5Ckst57/projectcss
import sty from "./PlasmicGrimmLunae.module.css"; // plasmic-import: C_SAWrOKfED/css

import _849Bd91B3E734B5E5Fc9Ef875F550158SvgIcon from "./icons/PlasmicIcon___849Bd91B3E734B5E5Fc9Ef875F550158Svg"; // plasmic-import: OYKeoEgiaq/icon
import _7A94C12518B17784A31F20Eb6Ceeff64SvgIcon from "./icons/PlasmicIcon___7A94C12518B17784A31F20Eb6Ceeff64Svg"; // plasmic-import: L__AFzPigP/icon
import MountainsByTheIconZ3322972SvgIcon from "./icons/PlasmicIcon__MountainsByTheIconZ3322972Svg"; // plasmic-import: q-jpBbWamN/icon
import HomesvgIcon from "./icons/PlasmicIcon__Homesvg"; // plasmic-import: Gqivseucid/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: N3Q4qxG4dGvc_x/icon

export type PlasmicGrimmLunae__VariantMembers = {};

export type PlasmicGrimmLunae__VariantsArgs = {};
type VariantPropType = keyof PlasmicGrimmLunae__VariantsArgs;
export const PlasmicGrimmLunae__VariantProps = new Array<VariantPropType>();

export type PlasmicGrimmLunae__ArgsType = {};
type ArgPropType = keyof PlasmicGrimmLunae__ArgsType;
export const PlasmicGrimmLunae__ArgProps = new Array<ArgPropType>();

export type PlasmicGrimmLunae__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  headerHeroSection?: p.Flex<"div">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  h2?: p.Flex<"h2">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultGrimmLunaeProps {}

function PlasmicGrimmLunae__RenderFunc(props: {
  variants: PlasmicGrimmLunae__VariantsArgs;
  args: PlasmicGrimmLunae__ArgsType;
  overrides: PlasmicGrimmLunae__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqH0UcdnSbyLsq()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"Grimm Lunae"}</title>

        <meta key="og:title" property="og:title" content={"Grimm Lunae"} />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Grimm Lunae"}
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/fc5589558f758f09bef0c37936c2d725.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/fc5589558f758f09bef0c37936c2d725.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__fi4Hm)} />
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__jmam9)}
            >
              <div className={classNames(projectcss.all, sty.column__ftyCp)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__u5G34)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__t1E8M)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tomVx)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qKklD
                        )}
                      >
                        {"NEW!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s4Pn
                      )}
                    >
                      {"Grimm Lunae"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yzXm9
                      )}
                    >
                      {
                        "At midnight, fly through a ring of fire through the icy tundra, over 50 meters above the ground; at Grimm Lunae."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__b9ZEb)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__oaY7J)}>
                  <h2
                    data-plasmic-name={"h2"}
                    data-plasmic-override={overrides.h2}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2
                    )}
                  >
                    {"What is Grimm Lunae?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nLOs
                  )}
                >
                  {
                    "Grimm Lunae is a night-time zipline track that takes you through the icy tundra."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bDrsX)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___2ByHw)}
                >
                  <div className={classNames(projectcss.all, sty.column__eM7Y)}>
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__chIb1
                      )}
                      darkBackground={true}
                      description={
                        "Fly through the sky, 50 metres above the ground at the server's first zipline park."
                      }
                      icon={
                        <_849Bd91B3E734B5E5Fc9Ef875F550158SvgIcon
                          className={classNames(projectcss.all, sty.svg__afKtz)}
                          role={"img"}
                        />
                      }
                      title={"Through the sky"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__vARqn)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__gljmp
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zEpRw
                          )}
                        >
                          {
                            "Take a rest at a station, as there are stations every 2-4 chunks."
                          }
                        </div>
                      }
                      icon={
                        <_7A94C12518B17784A31F20Eb6Ceeff64SvgIcon
                          className={classNames(projectcss.all, sty.svg__kvgT6)}
                          role={"img"}
                        />
                      }
                      title={"Stations every 2-4 chunks"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__cMi4Z)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__rOl7
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nYhjy
                          )}
                        >
                          {
                            "Views of the entire icy tundra, just blocks below you."
                          }
                        </div>
                      }
                      icon={
                        <MountainsByTheIconZ3322972SvgIcon
                          className={classNames(projectcss.all, sty.svg__jyoQm)}
                          role={"img"}
                        />
                      }
                      title={"Icy Tundra views"}
                      vertical={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__wu0OZ)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__oqT4N
                      )}
                      darkBackground={true}
                      description={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___9Ug3N
                          )}
                        >
                          {
                            "Grimm Ziplines is located about only 300 meters from Grimm Vista Westlands."
                          }
                        </div>
                      }
                      icon={
                        <HomesvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___4PxL5
                          )}
                          role={"img"}
                        />
                      }
                      title={"Close to Grimm Vista"}
                      vertical={true}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__res7T)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7MmHs)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jpqR0)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__c6XhV)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qbt9O
                    )}
                  >
                    {"Ticket prices"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lgmG
                  )}
                >
                  {
                    "Ticket prices vary for what experience you want to have at Grimm Parks. All prices in in-game money."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t0SR)}
              >
                <PriceCard
                  className={classNames(
                    "__wab_instance",
                    sty.priceCard___5Amri
                  )}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__hyGe
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kcJeU
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__bejX
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___0WKj
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"750"}
                  label={"a land dark and grimm"}
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__svSrv)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__d7Goz
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vmFl9
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__kkPa8
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___1GCz
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__ivj0E
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__byXyu
                            )}
                          >
                            {"Access to buffet at Devil's Meal in Hell."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dv1P
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wx6Tx
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lX5M
                            )}
                          >
                            {
                              "Transportation through Tabantha road system and PHB airport."
                            }
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___6VyeJ
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1250"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t82Xc
                      )}
                    >
                      {"A LAnd dark and grimm + grimm splash"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__mnU9U)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__or4Sm
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aju0E
                            )}
                          >
                            {"Access to all areas of ALDG park."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zbyBa
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__a7Kvl
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___4LUq
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__uAoRw
                        )}
                        description={
                          "Access to buffet at  Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pzzmd
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yx9Lz
                        )}
                        description={
                          "A zipline trip at either Grimm Solis or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__x6LkA
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___8G6Wl
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___1Kprh
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vNvZj
                      )}
                    >
                      {"grimm pass"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames(
                    "__wab_instance",
                    sty.priceCard___1Zcjq
                  )}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___6Yz7E
                        )}
                        description={"Access to all areas of ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__d2JzZ
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__t8Bl5
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vr19V
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yyUz
                        )}
                        description={
                          "Access to buffet at Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nx8Gq
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__g75Rw
                        )}
                        description={
                          "A zipline trip at Grimm Solis and/or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mVam
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__juy5H
                        )}
                        description={
                          "A 3-day stay at Grimm Vista Westlands or Shoreline."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kfl9T
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__sc1Kh
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jjYuZ
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"2750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__i5L5M
                      )}
                    >
                      {"Grimm stay"}
                    </div>
                  }
                  primary={true}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "headerHeroSection",
    "section",
    "foreground3",
    "h2",
    "footerSection"
  ],
  navbar: ["navbar"],
  headerHeroSection: ["headerHeroSection"],
  section: ["section", "foreground3", "h2"],
  foreground3: ["foreground3", "h2"],
  h2: ["h2"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  headerHeroSection: "div";
  section: "section";
  foreground3: "div";
  h2: "h2";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGrimmLunae__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGrimmLunae__VariantsArgs;
    args?: PlasmicGrimmLunae__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGrimmLunae__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicGrimmLunae__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicGrimmLunae__ArgProps,
          internalVariantPropNames: PlasmicGrimmLunae__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicGrimmLunae__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGrimmLunae";
  } else {
    func.displayName = `PlasmicGrimmLunae.${nodeName}`;
  }
  return func;
}

export const PlasmicGrimmLunae = Object.assign(
  // Top-level PlasmicGrimmLunae renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    h2: makeNodeComponent("h2"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicGrimmLunae
    internalVariantProps: PlasmicGrimmLunae__VariantProps,
    internalArgProps: PlasmicGrimmLunae__ArgProps
  }
);

export default PlasmicGrimmLunae;
/* prettier-ignore-end */
