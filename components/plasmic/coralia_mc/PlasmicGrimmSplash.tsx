// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 77KYUYm9JjmMdtJ5Ckst57
// Component: jScPezqJucR
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: WHKZkoQfDP8713/component
import PriceCard from "../../PriceCard"; // plasmic-import: UN7KXdWhMCaApR/component
import ValueProp from "../../ValueProp"; // plasmic-import: ZtUpmv_mljRcEB/component
import FooterSection from "../../FooterSection"; // plasmic-import: eLHgM1HorTA5C3/component

import { useScreenVariants as useScreenVariantsqH0UcdnSbyLsq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Q-h0UCDNSbyLSQ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_coralia_mc.module.css"; // plasmic-import: 77KYUYm9JjmMdtJ5Ckst57/projectcss
import sty from "./PlasmicGrimmSplash.module.css"; // plasmic-import: jScPezqJucR/css

import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: N3Q4qxG4dGvc_x/icon

export type PlasmicGrimmSplash__VariantMembers = {};

export type PlasmicGrimmSplash__VariantsArgs = {};
type VariantPropType = keyof PlasmicGrimmSplash__VariantsArgs;
export const PlasmicGrimmSplash__VariantProps = new Array<VariantPropType>();

export type PlasmicGrimmSplash__ArgsType = {};
type ArgPropType = keyof PlasmicGrimmSplash__ArgsType;
export const PlasmicGrimmSplash__ArgProps = new Array<ArgPropType>();

export type PlasmicGrimmSplash__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  headerHeroSection?: p.Flex<"div">;
  foreground3?: p.Flex<"div">;
  foreground4?: p.Flex<"div">;
  bestSellers?: p.Flex<"div">;
  bigPlants?: p.Flex<"div">;
  cactuses?: p.Flex<"div">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultGrimmSplashProps {}

function PlasmicGrimmSplash__RenderFunc(props: {
  variants: PlasmicGrimmSplash__VariantsArgs;
  args: PlasmicGrimmSplash__ArgsType;
  overrides: PlasmicGrimmSplash__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqH0UcdnSbyLsq()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"Grimm Splash"}</title>

        <meta key="og:title" property="og:title" content={"Grimm Splash"} />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Grimm Splash"}
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/6c426fa872f257c94957bd0b5fe7090b.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/6c426fa872f257c94957bd0b5fe7090b.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__vHcoG)} />
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__hxgJx)}
            >
              <div className={classNames(projectcss.all, sty.column__qEbPn)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zuoCe)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__x0ZR)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5A1HC
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b4BTh
                        )}
                      >
                        {"NEW!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tO4T
                      )}
                    >
                      {"Grimm Splash"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kSg3C
                      )}
                    >
                      {
                        "Hours of fun at the Grimm Splash water park, north of A land Dark and Grimm."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </p.Stack>

          <section className={classNames(projectcss.all, sty.section__lXbrb)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__c8ZK)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__s6RCz
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__qoKQ
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                projectcss.__wab_text,
                                sty.h1__mjP74
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <h1
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h1,
                                      projectcss.__wab_text,
                                      sty.h1__n3Rl5
                                    )}
                                  >
                                    <React.Fragment>
                                      <span
                                        className={
                                          "plasmic_default__all plasmic_default__span"
                                        }
                                        style={{
                                          color: "#000000",
                                          fontWeight: 600
                                        }}
                                      >
                                        {"Park "}
                                      </span>
                                      <React.Fragment>{"\n"}</React.Fragment>
                                      <span
                                        className={
                                          "plasmic_default__all plasmic_default__span"
                                        }
                                        style={{
                                          color: "#000000",
                                          fontWeight: 600
                                        }}
                                      >
                                        {"Rides"}
                                      </span>
                                    </React.Fragment>
                                  </h1>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </h1>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </h1>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </p.Stack>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__ggAWj)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground4"}
              data-plasmic-override={overrides.foreground4}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xu94E)}
              >
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lLkyk)}
                  />
                ) : null}
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"bestSellers"}
              data-plasmic-override={overrides.bestSellers}
              hasGap={true}
              className={classNames(projectcss.all, sty.bestSellers)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__wJDtK)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__m5NaQ)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___1Bhcw)}
                      displayHeight={"270px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/coralia_mc/images/_20220716191622Png.png",
                        fullWidth: 1920,
                        fullHeight: 1056,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ynjuZ)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__m9ZxQ
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"Wave Pool"}
                      </p.PlasmicLink>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__joN3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__jh0R)}
                      displayHeight={"270px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/coralia_mc/images/_20220716185948Png.png",
                        fullWidth: 1920,
                        fullHeight: 1056,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__lqXiA)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__za2Ky
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"Giantslide"}
                      </p.PlasmicLink>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__l4OWx)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__t2CW)}
                      displayHeight={"270px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/coralia_mc/images/image35.png",
                        fullWidth: 1920,
                        fullHeight: 1056,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__gU9E)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__wKjHj
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"Centrifuge"}
                      </p.PlasmicLink>
                    </div>
                  </p.Stack>
                </p.Stack>
              ) : null}
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__cnYEu)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___5FHKc)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ax3D0)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coralia_mc/images/image36.png",
                      fullWidth: 1920,
                      fullHeight: 1056,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___53YCx)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ycu2
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Whirlpool"}
                        </span>
                      </React.Fragment>
                    </p.PlasmicLink>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___9YVcu)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___3FcDm)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coralia_mc/images/image37.png",
                      fullWidth: 1920,
                      fullHeight: 1056,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ov9DX)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pZoGd
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Coconutnut"}
                        </span>
                      </React.Fragment>
                    </p.PlasmicLink>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___5UDbT)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vGrd)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coralia_mc/images/image38.png",
                      fullWidth: 1920,
                      fullHeight: 1056,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__pfeds)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___7C7Wu
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"CoCoNutNut Ride"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__qqNk3)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wMZhn)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coralia_mc/images/image39.png",
                      fullWidth: 1920,
                      fullHeight: 1056,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__nxhaV)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__wDmGn
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"The Drop"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ohi1U)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__a2ZPq)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__edSg)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coralia_mc/images/image40.png",
                      fullWidth: 1920,
                      fullHeight: 1056,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___5KsV1)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___5O9Ew
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"The Deep End"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___2JL8)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hwEvt)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coralia_mc/images/image41.png",
                      fullWidth: 1920,
                      fullHeight: 1056,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__j7Ddz)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__oqEy
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Aquaclimb"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__isfou)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jngmh)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yprDt)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__rNz7O)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lti6G
                    )}
                  >
                    {"Ticket prices"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fqKzT
                  )}
                >
                  {
                    "Ticket prices vary for what experience you want to have at Grimm Parks. All prices in in-game money."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hs2Dp)}
              >
                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__zrgLh)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__eso3Y
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__twvp3
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__bejX
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gIbz
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"750"}
                  label={"a land dark and grimm"}
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__rwKl1)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__eClnb
                        )}
                        description={"Access to all areas of the ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rxsA0
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__kkPa8
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jm3H
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__ivj0E
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b4Zvr
                            )}
                          >
                            {"Access to buffet at Devil's Meal in Hell."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__i2Qe6
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wx6Tx
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8Fw9Q
                            )}
                          >
                            {
                              "Transportation through Tabantha road system and PHB airport."
                            }
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__r3Rhf
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1250"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mtLqU
                      )}
                    >
                      {"A LAnd dark and grimm + grimm splash"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__p87Ze)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__akJtr
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uOt6G
                            )}
                          >
                            {"Access to all areas of ALDG park."}
                          </div>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__i4Xqi
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__a7Kvl
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pqNwg
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__uAoRw
                        )}
                        description={
                          "Access to buffet at  Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dOts7
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yx9Lz
                        )}
                        description={
                          "A zipline trip at either Grimm Solis or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tFtDe
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___8G6Wl
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__woVbL
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"1750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4072F
                      )}
                    >
                      {"grimm pass"}
                    </div>
                  }
                />

                <PriceCard
                  className={classNames("__wab_instance", sty.priceCard__vcmDs)}
                  description={
                    <React.Fragment>
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__nx4Ea
                        )}
                        description={"Access to all areas of ALDG park."}
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___8Ap
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__t8Bl5
                        )}
                        description={
                          "Access to all areas of the Grimm Splash waterpark."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gm0Me
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yyUz
                        )}
                        description={
                          "Access to buffet at Devil's Meal in Hell."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__f0TP
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__g75Rw
                        )}
                        description={
                          "A zipline trip at Grimm Solis and/or Lunae."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pF8Vs
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__juy5H
                        )}
                        description={
                          "A 3-day stay at Grimm Vista Westlands or Shoreline."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cP2W
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__sc1Kh
                        )}
                        description={
                          "Transportation through Tabantha road system and PHB airport."
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wbuHd
                            )}
                            role={"img"}
                          />
                        }
                        noTitle={true}
                      />
                    </React.Fragment>
                  }
                  dollars={"2750"}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oiFvJ
                      )}
                    >
                      {"Grimm stay"}
                    </div>
                  }
                  primary={true}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "headerHeroSection",
    "foreground3",
    "foreground4",
    "bestSellers",
    "bigPlants",
    "cactuses",
    "footerSection"
  ],
  navbar: ["navbar"],
  headerHeroSection: ["headerHeroSection"],
  foreground3: ["foreground3"],
  foreground4: ["foreground4"],
  bestSellers: ["bestSellers"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  headerHeroSection: "div";
  foreground3: "div";
  foreground4: "div";
  bestSellers: "div";
  bigPlants: "div";
  cactuses: "div";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGrimmSplash__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGrimmSplash__VariantsArgs;
    args?: PlasmicGrimmSplash__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGrimmSplash__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicGrimmSplash__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicGrimmSplash__ArgProps,
          internalVariantPropNames: PlasmicGrimmSplash__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicGrimmSplash__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGrimmSplash";
  } else {
    func.displayName = `PlasmicGrimmSplash.${nodeName}`;
  }
  return func;
}

export const PlasmicGrimmSplash = Object.assign(
  // Top-level PlasmicGrimmSplash renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    foreground3: makeNodeComponent("foreground3"),
    foreground4: makeNodeComponent("foreground4"),
    bestSellers: makeNodeComponent("bestSellers"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicGrimmSplash
    internalVariantProps: PlasmicGrimmSplash__VariantProps,
    internalArgProps: PlasmicGrimmSplash__ArgProps
  }
);

export default PlasmicGrimmSplash;
/* prettier-ignore-end */
